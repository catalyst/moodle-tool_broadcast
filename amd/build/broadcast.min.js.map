{"version":3,"sources":["../src/broadcast.js"],"names":["define","Str","ModalFactory","ModalEvents","Ajax","Fragment","Notification","Broadcast","contextid","modalObj","spinner","updateModalBody","formdata","broadcastid","action","params","JSON","stringify","get_string","then","title","setTitle","setBody","loadFragment","catch","exception","Error","processModalForm","e","preventDefault","copyform","getRoot","find","serialize","formjson","ariainvalid","errorclasses","invalid","length","concat","first","focus","call","methodname","args","jsonformdata","done","hide","fail","createModal","create","type","types","DEFAULT","body","large","modal","on","displayModalForm","show","copyBroadcast","event","target","parentElement","id","substring","editBroadcast","tableEventListeners","edits","document","getElementsByClassName","copies","i","addEventListener","init","context","createBroadcastButton","getElementById"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module provides the broadcast message create modal.\n *\n * @module     broadcast\n * @package    tool\n * @copyright  2020 Matt Porritt <mattp@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['core/str', 'core/modal_factory', 'core/modal_events', 'core/ajax', 'core/fragment', 'core/notification'],\n        function(Str, ModalFactory, ModalEvents, Ajax, Fragment, Notification) {\n\n    /**\n     * Module level variables.\n     */\n    var Broadcast = {};\n    var contextid;\n    var modalObj;\n    var spinner = '<p class=\"text-center\">'\n        + '<i class=\"fa fa-spinner fa-pulse fa-2x fa-fw\"></i>'\n        + '</p>';\n\n    /**\n     * Updates the body of the modal window.\n     *\n     * @param {Object} formdata\n     * @private\n     */\n    const updateModalBody = function(formdata, broadcastid, action) {\n        if (typeof formdata === \"undefined\") {\n            formdata = {};\n        }\n\n        if (typeof broadcastid === \"undefined\") {\n            broadcastid = 0;\n        }\n\n        if (typeof action === \"undefined\") {\n            action = '';\n        }\n\n        let params = {\n                'jsonformdata': JSON.stringify(formdata),\n                'broadcastid': broadcastid,\n                'action': action\n        };\n\n        Str.get_string('broadcastdetails', 'tool_broadcast').then((title) => {\n            modalObj.setTitle(title);\n            modalObj.setBody(Fragment.loadFragment('tool_broadcast', 'new_base_form', contextid, params));\n            return;\n        }).catch(() =>{\n            Notification.exception(new Error('Failed to load string: broadcastdetails'));\n        });\n    };\n\n    /**\n     * Updates Moodle form with selected information.\n     *\n     * @param {Object} e\n     * @private\n     */\n    const processModalForm = function(e) {\n        e.preventDefault(); // Stop modal from closing.\n\n        // Form data.\n        let copyform = modalObj.getRoot().find('form').serialize();\n        let formjson = JSON.stringify(copyform);\n\n        // Handle invalid form fields for better UX.\n        let ariainvalid = modalObj.getRoot().find('[aria-invalid=\"true\"]');\n        let errorclasses = modalObj.getRoot().find('.error');\n        let invalid;\n\n        if (ariainvalid.length) {\n            invalid = ariainvalid.concat(errorclasses);\n        }\n\n        if (invalid !== undefined && invalid.length) {\n            invalid.first().focus();\n            return;\n        }\n\n        // Submit form via ajax.\n        Ajax.call([{\n            methodname: 'tool_broadcast_submit_create_form',\n            args: {jsonformdata: formjson}\n        }])[0].done(() => {\n            // For submission succeeded.\n            modalObj.setBody(spinner);\n            modalObj.hide();\n        }).fail(() => {\n            // Form submission failed server side, redisplay with errors.\n            updateModalBody(copyform);\n        });\n\n    };\n\n    /**\n     * Create the modal window.\n     *\n     * @private\n     */\n    const createModal = function() {\n        Str.get_string('loading', 'tool_broadcast').then((title) => {\n            // Create the Modal.\n            ModalFactory.create({\n                type: ModalFactory.types.DEFAULT,\n                title: title,\n                body: spinner,\n                large: true\n            })\n            .done((modal) => {\n                modalObj = modal;\n                // Explicitly handle form click events.\n                modalObj.getRoot().on('click', '#id_submitbutton', processModalForm);\n                modalObj.getRoot().on('click', '#id_cancel', (e) => {\n                    e.preventDefault();\n                    modalObj.setBody(spinner);\n                    modalObj.hide();\n                });\n            });\n            return;\n        }).catch(() => {\n            Notification.exception(new Error('Failed to load string: loading'));\n        });\n    };\n\n    const displayModalForm = function() {\n        updateModalBody();\n        modalObj.show();\n    };\n\n    const copyBroadcast = function(event) {\n        event.preventDefault();\n        let broadcastid = event.target.parentElement.id.substring(20);\n        updateModalBody({}, broadcastid, 'copy');\n        modalObj.show();\n    };\n\n    const editBroadcast = function(event) {\n        event.preventDefault();\n        let broadcastid = event.target.parentElement.id.substring(20);\n        updateModalBody({}, broadcastid, 'edit');\n        modalObj.show();\n    };\n\n    const tableEventListeners = function() {\n        let edits = document.getElementsByClassName('action-icon edit');\n        let copies = document.getElementsByClassName('action-icon copy');\n\n        for (let i = 0; i < edits.length; i++) {\n            edits[i].addEventListener('click', editBroadcast);\n        }\n\n        for (let i = 0; i < copies.length; i++) {\n            copies[i].addEventListener('click', copyBroadcast);\n        }\n    };\n\n    Broadcast.init = function(context) {\n        contextid = context;\n        createModal(); // Setup the initial Modal.\n        tableEventListeners(); // Add the event listeners to action buttons in the table.\n\n        let createBroadcastButton = document.getElementById('local-broadcast-add-broadcast');\n        createBroadcastButton.addEventListener('click', displayModalForm);\n\n    };\n\n    return Broadcast;\n});\n"],"file":"broadcast.min.js"}