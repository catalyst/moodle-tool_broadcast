{"version":3,"sources":["../src/broadcast.js"],"names":["define","Str","ModalFactory","ModalEvents","Ajax","Fragment","Notification","Broadcast","contextid","modalObj","spinner","updateBroadcastTable","tableContainer","document","getElementById","loader","getElementsByClassName","tableElement","classList","remove","loadFragment","done","response","innerHTML","add","tableEventListeners","fail","exception","Error","updateModalBody","formdata","broadcastid","action","params","JSON","stringify","get_string","then","title","setTitle","setBody","catch","processModalForm","e","preventDefault","copyform","getRoot","find","serialize","formjson","ariainvalid","errorclasses","invalid","length","concat","first","focus","call","methodname","args","jsonformdata","hide","createModal","create","type","types","DEFAULT","body","large","modal","on","displayModalForm","show","copyBroadcast","event","target","parentElement","id","substring","editBroadcast","edits","copies","i","addEventListener","init","context","createBroadcastButton"],"mappings":"AAwBAA,OAAM,4BAAC,CAAC,UAAD,CAAa,oBAAb,CAAmC,mBAAnC,CAAwD,WAAxD,CAAqE,eAArE,CAAsF,mBAAtF,CAAD,CACN,SAASC,CAAT,CAAcC,CAAd,CAA4BC,CAA5B,CAAyCC,CAAzC,CAA+CC,CAA/C,CAAyDC,CAAzD,CAAuE,IAK/DC,CAAAA,CAAS,CAAG,EALmD,CAM/DC,CAN+D,CAO/DC,CAP+D,CAQ/DC,CAAO,oFARwD,CAe7DC,CAAoB,CAAG,UAAW,IAChCC,CAAAA,CAAc,CAAGC,QAAQ,CAACC,cAAT,CAAwB,gCAAxB,CADe,CAEhCC,CAAM,CAAGH,CAAc,CAACI,sBAAf,CAAsC,wBAAtC,EAAgE,CAAhE,CAFuB,CAGhCC,CAAY,CAAGJ,QAAQ,CAACC,cAAT,CAAwB,sBAAxB,CAHiB,CAKpCC,CAAM,CAACG,SAAP,CAAiBC,MAAjB,CAAwB,MAAxB,EAEAd,CAAQ,CAACe,YAAT,CAAsB,gBAAtB,CAAwC,OAAxC,CAAiDZ,CAAjD,EACCa,IADD,CACM,SAACC,CAAD,CAAc,CAChBL,CAAY,CAACM,SAAb,CAAyBD,CAAzB,CACAP,CAAM,CAACG,SAAP,CAAiBM,GAAjB,CAAqB,MAArB,EACAC,CAAmB,EAEtB,CAND,EAMGC,IANH,CAMQ,UAAM,CACVpB,CAAY,CAACqB,SAAb,CAAuB,GAAIC,CAAAA,KAAJ,CAAU,yBAAV,CAAvB,CACH,CARD,CASH,CA/BkE,CAuC7DC,CAAe,CAAG,SAASC,CAAT,CAAmBC,CAAnB,CAAgCC,CAAhC,CAAwC,CAC5D,GAAwB,WAApB,QAAOF,CAAAA,CAAX,CAAqC,CACjCA,CAAQ,CAAG,EACd,CAED,GAA2B,WAAvB,QAAOC,CAAAA,CAAX,CAAwC,CACpCA,CAAW,CAAG,CACjB,CAED,GAAsB,WAAlB,QAAOC,CAAAA,CAAX,CAAmC,CAC/BA,CAAM,CAAG,EACZ,CAED,GAAIC,CAAAA,CAAM,CAAG,CACT,aAAgBC,IAAI,CAACC,SAAL,CAAeL,CAAf,CADP,CAET,YAAeC,CAFN,CAGT,OAAUC,CAHD,CAAb,CAMA/B,CAAG,CAACmC,UAAJ,CAAe,kBAAf,CAAmC,gBAAnC,EAAqDC,IAArD,CAA0D,SAACC,CAAD,CAAW,CACjE7B,CAAQ,CAAC8B,QAAT,CAAkBD,CAAlB,EACA7B,CAAQ,CAAC+B,OAAT,CAAiBnC,CAAQ,CAACe,YAAT,CAAsB,gBAAtB,CAAwC,eAAxC,CAAyDZ,CAAzD,CAAoEyB,CAApE,CAAjB,CAEH,CAJD,EAIGQ,KAJH,CAIS,UAAM,CACXnC,CAAY,CAACqB,SAAb,CAAuB,GAAIC,CAAAA,KAAJ,CAAU,yCAAV,CAAvB,CACH,CAND,CAOH,CAjEkE,CAyE7Dc,CAAgB,CAAG,SAASC,CAAT,CAAY,CACjCA,CAAC,CAACC,cAAF,GADiC,GAI7BC,CAAAA,CAAQ,CAAGpC,CAAQ,CAACqC,OAAT,GAAmBC,IAAnB,CAAwB,MAAxB,EAAgCC,SAAhC,EAJkB,CAK7BC,CAAQ,CAAGf,IAAI,CAACC,SAAL,CAAeU,CAAf,CALkB,CAQ7BK,CAAW,CAAGzC,CAAQ,CAACqC,OAAT,GAAmBC,IAAnB,CAAwB,yBAAxB,CARe,CAS7BI,CAAY,CAAG1C,CAAQ,CAACqC,OAAT,GAAmBC,IAAnB,CAAwB,QAAxB,CATc,CAU7BK,CAV6B,CAYjC,GAAIF,CAAW,CAACG,MAAhB,CAAwB,CACpBD,CAAO,CAAGF,CAAW,CAACI,MAAZ,CAAmBH,CAAnB,CACb,CAED,GAAIC,CAAO,SAAP,EAAyBA,CAAO,CAACC,MAArC,CAA6C,CACzCD,CAAO,CAACG,KAAR,GAAgBC,KAAhB,GACA,MACH,CAGDpD,CAAI,CAACqD,IAAL,CAAU,CAAC,CACPC,UAAU,CAAE,mCADL,CAEPC,IAAI,CAAE,CAACC,YAAY,CAAEX,CAAf,CAFC,CAAD,CAAV,EAGI,CAHJ,EAGO5B,IAHP,CAGY,UAAM,CAEdZ,CAAQ,CAAC+B,OAAT,CAAiB9B,CAAjB,EACAD,CAAQ,CAACoD,IAAT,GACAlD,CAAoB,EACvB,CARD,EAQGe,IARH,CAQQ,UAAM,CAEVG,CAAe,CAACgB,CAAD,CAClB,CAXD,CAaH,CA5GkE,CAmH7DiB,CAAW,CAAG,UAAW,CAC3B7D,CAAG,CAACmC,UAAJ,CAAe,SAAf,CAA0B,gBAA1B,EAA4CC,IAA5C,CAAiD,SAACC,CAAD,CAAW,CAExDpC,CAAY,CAAC6D,MAAb,CAAoB,CAChBC,IAAI,CAAE9D,CAAY,CAAC+D,KAAb,CAAmBC,OADT,CAEhB5B,KAAK,CAAEA,CAFS,CAGhB6B,IAAI,CAAEzD,CAHU,CAIhB0D,KAAK,GAJW,CAApB,EAMC/C,IAND,CAMM,SAACgD,CAAD,CAAW,CACb5D,CAAQ,CAAG4D,CAAX,CAEA5D,CAAQ,CAACqC,OAAT,GAAmBwB,EAAnB,CAAsB,OAAtB,CAA+B,kBAA/B,CAAmD5B,CAAnD,EACAjC,CAAQ,CAACqC,OAAT,GAAmBwB,EAAnB,CAAsB,OAAtB,CAA+B,YAA/B,CAA6C,SAAC3B,CAAD,CAAO,CAChDA,CAAC,CAACC,cAAF,GACAnC,CAAQ,CAAC+B,OAAT,CAAiB9B,CAAjB,EACAD,CAAQ,CAACoD,IAAT,EACH,CAJD,CAKH,CAfD,CAiBH,CAnBD,EAmBGpB,KAnBH,CAmBS,UAAM,CACXnC,CAAY,CAACqB,SAAb,CAAuB,GAAIC,CAAAA,KAAJ,CAAU,gCAAV,CAAvB,CACH,CArBD,CAsBH,CA1IkE,CA4I7D2C,CAAgB,CAAG,UAAW,CAChC1C,CAAe,GACfpB,CAAQ,CAAC+D,IAAT,EACH,CA/IkE,CAiJ7DC,CAAa,CAAG,SAASC,CAAT,CAAgB,CAClCA,CAAK,CAAC9B,cAAN,GACA,GAAMb,CAAAA,CAAW,CAAG2C,CAAK,CAACC,MAAN,CAAaC,aAAb,CAA2BC,EAA3B,CAA8BC,SAA9B,CAAwC,EAAxC,CAApB,CACA,GAAmB,EAAf,EAAA/C,CAAJ,CAAuB,CACnBF,CAAe,CAAC,EAAD,CAAKE,CAAL,CAAkB,MAAlB,CAAf,CACAtB,CAAQ,CAAC+D,IAAT,EACH,CACJ,CAxJkE,CA0J7DO,CAAa,CAAG,SAASL,CAAT,CAAgB,CAClCA,CAAK,CAAC9B,cAAN,GACA,GAAMb,CAAAA,CAAW,CAAG2C,CAAK,CAACC,MAAN,CAAaC,aAAb,CAA2BC,EAA3B,CAA8BC,SAA9B,CAAwC,EAAxC,CAApB,CACA,GAAmB,EAAf,EAAA/C,CAAJ,CAAuB,CACnBF,CAAe,CAAC,EAAD,CAAKE,CAAL,CAAkB,MAAlB,CAAf,CACAtB,CAAQ,CAAC+D,IAAT,EACH,CACJ,CAjKkE,CAmK7D/C,CAAmB,CAAG,UAAW,CAInC,OAHIuD,CAAAA,CAAK,CAAGnE,QAAQ,CAACG,sBAAT,CAAgC,kBAAhC,CAGZ,CAFIiE,CAAM,CAAGpE,QAAQ,CAACG,sBAAT,CAAgC,kBAAhC,CAEb,CAASkE,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,CAAK,CAAC3B,MAA1B,CAAkC6B,CAAC,EAAnC,CAAuC,CACnCF,CAAK,CAACE,CAAD,CAAL,CAASC,gBAAT,CAA0B,OAA1B,CAAmCJ,CAAnC,CACH,CAED,IAAK,GAAIG,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGD,CAAM,CAAC5B,MAA3B,CAAmC6B,CAAC,EAApC,CAAwC,CACpCD,CAAM,CAACC,CAAD,CAAN,CAAUC,gBAAV,CAA2B,OAA3B,CAAoCV,CAApC,CACH,CACJ,CA9KkE,CAgLnElE,CAAS,CAAC6E,IAAV,CAAiB,SAASC,CAAT,CAAkB,CAC/B7E,CAAS,CAAG6E,CAAZ,CACAvB,CAAW,GACXrC,CAAmB,GAEnB,GAAI6D,CAAAA,CAAqB,CAAGzE,QAAQ,CAACC,cAAT,CAAwB,+BAAxB,CAA5B,CACAwE,CAAqB,CAACH,gBAAtB,CAAuC,OAAvC,CAAgDZ,CAAhD,CAEH,CARD,CAUA,MAAOhE,CAAAA,CACV,CA5LK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module provides the broadcast message create modal.\n *\n * @module     broadcast\n * @package    tool\n * @copyright  2020 Matt Porritt <mattp@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['core/str', 'core/modal_factory', 'core/modal_events', 'core/ajax', 'core/fragment', 'core/notification'],\nfunction(Str, ModalFactory, ModalEvents, Ajax, Fragment, Notification) {\n\n    /**\n     * Module level variables.\n     */\n    var Broadcast = {};\n    var contextid;\n    var modalObj;\n    var spinner = '<p class=\"text-center\">'\n        + '<i class=\"fa fa-spinner fa-pulse fa-2x fa-fw\"></i>'\n        + '</p>';\n\n    /**\n     * Update the broadcast overview table with latest data.\n     */\n    const updateBroadcastTable = function() {\n        let tableContainer = document.getElementById('tool-broadcast-table-container');\n        let loader = tableContainer.getElementsByClassName('overlay-icon-container')[0];\n        let tableElement = document.getElementById('tool-broadcast-table');\n\n        loader.classList.remove('hide'); // Show loader if not already shown.\n\n        Fragment.loadFragment('tool_broadcast', 'table', contextid)\n        .done((response) => {\n            tableElement.innerHTML = response;\n            loader.classList.add('hide');\n            tableEventListeners(); // Re-add table event listeners.\n\n        }).fail(() => {\n            Notification.exception(new Error('Failed to update table.'));\n        });\n    };\n\n    /**\n     * Updates the body of the modal window.\n     *\n     * @param {Object} formdata\n     * @private\n     */\n    const updateModalBody = function(formdata, broadcastid, action) {\n        if (typeof formdata === \"undefined\") {\n            formdata = {};\n        }\n\n        if (typeof broadcastid === \"undefined\") {\n            broadcastid = 0;\n        }\n\n        if (typeof action === \"undefined\") {\n            action = '';\n        }\n\n        let params = {\n            'jsonformdata': JSON.stringify(formdata),\n            'broadcastid': broadcastid,\n            'action': action\n        };\n\n        Str.get_string('broadcastdetails', 'tool_broadcast').then((title) => {\n            modalObj.setTitle(title);\n            modalObj.setBody(Fragment.loadFragment('tool_broadcast', 'new_base_form', contextid, params));\n            return;\n        }).catch(() => {\n            Notification.exception(new Error('Failed to load string: broadcastdetails'));\n        });\n    };\n\n    /**\n     * Updates Moodle form with selected information.\n     *\n     * @param {Object} e\n     * @private\n     */\n    const processModalForm = function(e) {\n        e.preventDefault(); // Stop modal from closing.\n\n        // Form data.\n        let copyform = modalObj.getRoot().find('form').serialize();\n        let formjson = JSON.stringify(copyform);\n\n        // Handle invalid form fields for better UX.\n        let ariainvalid = modalObj.getRoot().find('[aria-invalid=\"true\"]');\n        let errorclasses = modalObj.getRoot().find('.error');\n        let invalid;\n\n        if (ariainvalid.length) {\n            invalid = ariainvalid.concat(errorclasses);\n        }\n\n        if (invalid !== undefined && invalid.length) {\n            invalid.first().focus();\n            return;\n        }\n\n        // Submit form via ajax.\n        Ajax.call([{\n            methodname: 'tool_broadcast_submit_create_form',\n            args: {jsonformdata: formjson}\n        }])[0].done(() => {\n            // For submission succeeded.\n            modalObj.setBody(spinner);\n            modalObj.hide();\n            updateBroadcastTable();\n        }).fail(() => {\n            // Form submission failed server side, redisplay with errors.\n            updateModalBody(copyform);\n        });\n\n    };\n\n    /**\n     * Create the modal window.\n     *\n     * @private\n     */\n    const createModal = function() {\n        Str.get_string('loading', 'tool_broadcast').then((title) => {\n            // Create the Modal.\n            ModalFactory.create({\n                type: ModalFactory.types.DEFAULT,\n                title: title,\n                body: spinner,\n                large: true\n            })\n            .done((modal) => {\n                modalObj = modal;\n                // Explicitly handle form click events.\n                modalObj.getRoot().on('click', '#id_submitbutton', processModalForm);\n                modalObj.getRoot().on('click', '#id_cancel', (e) => {\n                    e.preventDefault();\n                    modalObj.setBody(spinner);\n                    modalObj.hide();\n                });\n            });\n            return;\n        }).catch(() => {\n            Notification.exception(new Error('Failed to load string: loading'));\n        });\n    };\n\n    const displayModalForm = function() {\n        updateModalBody();\n        modalObj.show();\n    };\n\n    const copyBroadcast = function(event) {\n        event.preventDefault();\n        const broadcastid = event.target.parentElement.id.substring(20);\n        if (broadcastid != '') {\n            updateModalBody({}, broadcastid, 'copy');\n            modalObj.show();\n        }\n    };\n\n    const editBroadcast = function(event) {\n        event.preventDefault();\n        const broadcastid = event.target.parentElement.id.substring(20);\n        if (broadcastid != '') {\n            updateModalBody({}, broadcastid, 'edit');\n            modalObj.show();\n        }\n    };\n\n    const tableEventListeners = function() {\n        let edits = document.getElementsByClassName('action-icon edit');\n        let copies = document.getElementsByClassName('action-icon copy');\n\n        for (let i = 0; i < edits.length; i++) {\n            edits[i].addEventListener('click', editBroadcast);\n        }\n\n        for (let i = 0; i < copies.length; i++) {\n            copies[i].addEventListener('click', copyBroadcast);\n        }\n    };\n\n    Broadcast.init = function(context) {\n        contextid = context;\n        createModal(); // Setup the initial Modal.\n        tableEventListeners(); // Add the event listeners to action buttons in the table.\n\n        let createBroadcastButton = document.getElementById('local-broadcast-add-broadcast');\n        createBroadcastButton.addEventListener('click', displayModalForm);\n\n    };\n\n    return Broadcast;\n});\n"],"file":"broadcast.min.js"}