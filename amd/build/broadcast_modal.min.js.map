{"version":3,"sources":["../src/broadcast_modal.js"],"names":["define","Str","ModalFactory","ModalEvents","Ajax","Notification","BroadcastModal","contextid","modalObj","spinner","messageQueue","checkMessages","call","methodname","args","done","response","messages","JSON","parse","message","messageId","id","fail","exception","Error","displayMessages","getRoot","classList","contains","setTitle","title","setBody","body","show","acceptMessage","window","console","log","createModal","Promise","resolve","reject","get_string","then","footerBtn","document","createElement","type","value","create","types","DEFAULT","footer","large","modal","on","e","preventDefault","hide","hidden","catch","init","context","interval","Math","floor","random","setInterval"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module provides the broadcast message modal that displays messages to users.\n *\n * @module     broadcast\n * @package    tool\n * @copyright  2020 Matt Porritt <mattp@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['core/str', 'core/modal_factory', 'core/modal_events', 'core/ajax', 'core/notification'],\n        function(Str, ModalFactory, ModalEvents, Ajax, Notification) {\n\n    /**\n     * Module level variables.\n     */\n    var BroadcastModal = {};\n    var contextid;\n    var modalObj;\n    const spinner = '<p class=\"text-center\">'\n        + '<i class=\"fa fa-spinner fa-pulse fa-2x fa-fw\"></i>'\n        + '</p>';\n    var messageQueue = {};\n\n    const checkMessages = () => {\n        Ajax.call([{\n            methodname: 'tool_broadcast_get_broadcasts',\n            args: {contextid: contextid}\n        }])[0].done((response) => {\n            let messages = JSON.parse(response);\n            for (const message in messages) {\n                let messageId = messages[message].id;\n                messageQueue[messageId] = messages[message];\n            }\n        }).fail(() => {\n            Notification.exception(new Error('Failed to get broadcast messages'));\n        });\n\n    };\n\n    const displayMessages = () => {\n         //Check the queue for messages.\n\n        // If modal window is not currently displayed, check for queue messages.\n        if (!modalObj.getRoot()[0].classList.contains('show')) {\n            for (const message in messageQueue) {\n                // Display the message in the modal.\n                modalObj.setTitle(messageQueue[message].title);\n                modalObj.setBody(messageQueue[message].body);\n                modalObj.show();\n\n                // remove the message from the queue\n                delete messageQueue[message];\n\n                // Exit the loop after showing one message.\n                break;\n            }\n        }\n    };\n\n    const acceptMessage = () => {\n        modalObj.setBody(spinner);\n        window.console.log('message accepted');\n    };\n\n    /**\n     * Create the modal window.\n     *\n     * @private\n     */\n    const createModal = () => {\n        return new Promise((resolve, reject) => {\n            Str.get_string('loading', 'tool_broadcast').then((title) => {\n                // Create the Modal.\n                let footerBtn = document.createElement('input');\n                footerBtn.type = 'button';\n                footerBtn.value = 'Acknowledge';\n                footerBtn.id = 'tool-broadcast-accept-broadcast';\n\n                ModalFactory.create({\n                    type: ModalFactory.types.DEFAULT,\n                    title: title,\n                    body: spinner,\n                    footer: footerBtn,\n                    large: true\n                })\n                .done((modal) => {\n                    modalObj = modal;\n                    modalObj.getRoot().on('click', '#tool-broadcast-accept-broadcast', (e) => {\n                        e.preventDefault();\n                        modalObj.hide();\n                    });\n                    modalObj.getRoot().on(ModalEvents.hidden, acceptMessage);\n                    resolve();\n\n                });\n            }).catch(() => {\n                reject(new Error('Failed to load string: loading'));\n            });\n        });\n    };\n\n    BroadcastModal.init = function(context) {\n        contextid = context;\n\n        // We don't want every user making ajax requests at the same time.\n        // So we add some randomness to the check interval at creation time.\n        let min = 10000;\n        let max = 20000;\n        let interval = Math.floor(Math.random() * (max - min + 1)) + min;\n\n        // TODO: add chain for create modal then to check messages.\n        createModal()\n        .then(() => {\n            checkMessages(); // Do an initial broadcast message check once things are loaded.\n            setInterval(checkMessages, interval); // Check messages at a regular interval.\n            setInterval(displayMessages, 5000); // Display messages at a regular interval, can be more frequent.\n        })\n        .catch(() => {\n            Notification.exception(new Error('Failed to create broadcast modal'));\n        });\n    };\n\n    return BroadcastModal;\n});\n"],"file":"broadcast_modal.min.js"}