{"version":3,"sources":["../src/create_modal.js"],"names":["define","Str","ModalFactory","Ajax","Fragment","Notification","CreateModal","contextid","modalObj","spinner","updateModalBody","formdata","params","JSON","stringify","get_string","then","title","setTitle","setBody","loadFragment","catch","exception","Error","processModalForm","e","preventDefault","copyform","getRoot","find","serialize","formjson","ariainvalid","errorclasses","invalid","concat","length","first","focus","call","methodname","args","jsonformdata","done","hide","fail","createModal","create","type","types","DEFAULT","body","large","modal","on","formredirect","displayModalForm","show","init","context","createBroadcastButton","document","getElementById","addEventListener"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module provides the broadcast message create modal.\n *\n * @module     broadcast\n * @package    tool\n * @copyright  2020 Matt Porritt <mattp@catalyst-au.net>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['core/str', 'core/modal_factory', 'core/ajax', 'core/fragment', 'core/notification'],\n        function(Str, ModalFactory, Ajax, Fragment, Notification) {\n\n    /**\n     * Module level variables.\n     */\n    var CreateModal = {};\n    var contextid;\n    var modalObj;\n    var spinner = '<p class=\"text-center\">'\n        + '<i class=\"fa fa-spinner fa-pulse fa-2x fa-fw\"></i>'\n        + '</p>';\n\n    /**\n     * Updates the body of the modal window.\n     *\n     * @param {Object} formdata\n     * @private\n     */\n    const updateModalBody = (formdata) => {\n        if (typeof formdata === \"undefined\") {\n            formdata = {};\n        }\n\n        let params = {\n                'jsonformdata': JSON.stringify(formdata),\n        };\n\n        Str.get_string('broadcastdetails', 'tool_broadcast').then((title) => {\n            modalObj.setTitle(title);\n            modalObj.setBody(Fragment.loadFragment('tool_broadcast', 'new_base_form', contextid, params));\n            return;\n        }).catch(() =>{\n            Notification.exception(new Error('Failed to load string: broadcastdetails'));\n        });\n    };\n\n    /**\n     * Updates Moodle form with selected information.\n     *\n     * @param {Object} e\n     * @private\n     */\n    const processModalForm = (e) => {\n        e.preventDefault(); // Stop modal from closing.\n\n        // Form data.\n        let copyform = modalObj.getRoot().find('form').serialize();\n        let formjson = JSON.stringify(copyform);\n\n        // Handle invalid form fields for better UX.\n        let ariainvalid = modalObj.getRoot().find('[aria-invalid=\"true\"]');\n        let errorclasses = modalObj.getRoot().find('.error');\n        let invalid = ariainvalid.concat(errorclasses);\n\n        if (invalid.length) {\n            invalid.first().focus();\n            return;\n        }\n\n        // Submit form via ajax.\n        Ajax.call([{\n            methodname: 'tool_broadcast_submit_create_form',\n            args: {jsonformdata: formjson}\n        }])[0].done(() => {\n            // For submission succeeded.\n            modalObj.setBody(spinner);\n            modalObj.hide();\n        }).fail(() => {\n            // Form submission failed server side, redisplay with errors.\n            updateModalBody(copyform);\n        });\n\n    };\n\n    /**\n     * Updates the body of the modal window.\n     *\n     * @param {Object} formdata\n     * @private\n     */\n    const createModal = () => {\n        Str.get_string('loading', 'tool_broadcast').then((title) => {\n            // Create the Modal.\n            ModalFactory.create({\n                type: ModalFactory.types.DEFAULT,\n                title: title,\n                body: spinner,\n                large: true\n            })\n            .done((modal) => {\n                modalObj = modal;\n                // Explicitly handle form click events.\n                modalObj.getRoot().on('click', '#id_submitreturn', processModalForm);\n                modalObj.getRoot().on('click', '#id_submitdisplay', (e) => {\n                    e.formredirect = true;\n                    processModalForm(e);\n\n                });\n                modalObj.getRoot().on('click', '#id_cancel', (e) => {\n                    e.preventDefault();\n                    modalObj.setBody(spinner);\n                    modalObj.hide();\n                });\n            });\n            return;\n        }).catch(() => {\n            Notification.exception(new Error('Failed to load string: loading'));\n        });\n    };\n\n    const displayModalForm = () => {\n        updateModalBody();\n        modalObj.show();\n    };\n\n    CreateModal.init = function(context) {\n        contextid = context;\n        createModal(); // Setup the initial Modal.\n\n        let createBroadcastButton = document.getElementById('local-broadcast-add-broadcast');\n        createBroadcastButton.addEventListener('click', displayModalForm);\n\n    };\n\n    return CreateModal;\n});\n"],"file":"create_modal.min.js"}